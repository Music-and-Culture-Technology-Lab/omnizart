#!/usr/bin/env python3 

# Check out the discussion: https://github.com/python-poetry/poetry/issues/761
# The code is from: https://github.com/sdss/flicamera/blob/master/create_setup.py

import os
import sys
from distutils.version import StrictVersion

# If there is a global installation of poetry, prefer that.
lib = os.path.expanduser('~/.poetry/lib')
vendors = os.path.join(lib, 'poetry', '_vendor')
current_vendors = os.path.join(
    vendors, 'py{}'.format('.'.join(str(v) for v in sys.version_info[:2]))
)

sys.path.insert(0, lib)
sys.path.insert(0, current_vendors)

try:
    try:
        from poetry.core.factory import Factory
        from poetry.core.masonry.builders.sdist import SdistBuilder
    except (ImportError, ModuleNotFoundError):
        from poetry.masonry.builders.sdist import SdistBuilder
        from poetry.factory import Factory
    from poetry.__version__ import __version__
except (ImportError, ModuleNotFoundError) as ee:
    raise ImportError('install poetry by doing pip install poetry to use '
                      f'this script: {ee}')


# Generate a Poetry object that knows about the metadata in pyproject.toml
factory = Factory()
poetry = factory.create_poetry(os.path.dirname(__file__))

# Use the SdistBuilder to genrate a blob for setup.py
if StrictVersion(__version__) >= StrictVersion('1.1.0b1'):
    sdist_builder = SdistBuilder(poetry, None)
else:
    sdist_builder = SdistBuilder(poetry, None, None)

setuppy_blob = sdist_builder.build_setup()

with open('setup.py', 'wb') as unit:
    unit.write(setuppy_blob)
    unit.write(b'\n# This setup.py was autogenerated using poetry.\n')


# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# Thorough configurable options can be found at: 
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: general-check

on:
  push:
  pull_request:
    branches: [ master ]
    

jobs:
  build:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7]

    steps:
      - uses: actions/checkout@v2
      - name: Cache site packages
        uses: actions/cache@v2
        env:
          cache-name: python-packages
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download large files
        run: |
          curl -L https://github.com/Music-and-Culture-Technology-Lab/omnizart/releases/download/checkpoints-20211001/resource.zip -o resource.zip
          unzip resource.zip
          mv resource/* tests/resource
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libsndfile1 ffmpeg
          if [ ${{ matrix.python-version }} = "3.6" ]; then
            export DEFAULT_INSTALL_APPROACH=pip
          fi
          ./scripts/install.sh
          omnizart download-checkpoints --output-path ./
          pip install flake8 pylint pytest pytest-cov pytest-mock
      - name: Check with linters
        run: |
          make lint
      - name: Test with pytest
        run: |
          make test
